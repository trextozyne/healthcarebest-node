export declare class RequestInformationContainer {
    url: string;
    method: string;
    referrer: string;
    userAgent: string;
    remoteAddress: string;
    statusCode: number;
    /**
     * The constructor for RequestInformationContainer does not take any arugments
     * and is solely meant to allocate several properties on the instance. The
     * constructor will init properties which closely relate to the ErrorMessage
     * context.httpRequest object properties. The properties on the instance
     * should be set through there corresponding setters as these will enforce
     * type validation around input.
     * @class RequestInformationContainer
     * @classdesc RequestInformationContainer is a class which is meant to
     * standardize and contain values corresponding to request information around
     * an error-inducing request. This class is meant to be a temporary container
     * for request information and essentially a standardized interface consumed
     * by the ErrorMessage class itself.
     * @property {String} url - The route/url that the request addressed
     * @property {String} method - The method that the request used
     * @property {String} referrer - The referrer of the request
     * @property {String} userAgent - The user-agent of the requester
     * @property {String} remoteAddress - The IP address of the requester
     * @property {Number} statusCode - The response status code
     */
    constructor();
    /**
     * Sets the url property on the instance.
     * @chainable
     * @param {String} url - the url of the request
     * @returns {this} - returns the instance for chaining
     */
    setUrl(url: string): this;
    /**
     * Sets the method property on the instance.
     * @chainable
     * @param {String} method - the method of the request
     * @returns {this} - returns the instance for chaining
     */
    setMethod(method: string): this;
    /**
     * Sets the referrer property on the instance.
     * @chainable
     * @param {String} referrer - the referrer of the request
     * @returns {this} - returns the instance for chaining
     */
    setReferrer(referrer?: string): this;
    /**
     * Sets the userAgent property on the instance.
     * @chainable
     * @param {String} userAgent - the user agent committing the request
     * @returns {this} - returns the instance for chaining
     */
    setUserAgent(userAgent?: string): this;
    /**
     * Sets the remoteAddress property on the instance.
     * @chainable
     * @param {String} remoteIp - the remote IP of the requester
     * @returns {this} - returns the instance for chaining
     */
    setRemoteAddress(remoteIp?: string): this;
    /**
     * Sets the statusCode property on the instance.
     * @chainable
     * @param {Number} statusCode - the status code of the response to the request
     * @returns {this} - returns the instance for chaining
     */
    setStatusCode(statusCode: number): this;
}
